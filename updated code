#include <iostream>
#include <fstream>
#include <windows.h>
using namespace std;

class University {
private:
    string RollNo, Name, Subject, Address;

public:
    University() : RollNo(""), Name(""), Subject(""), Address("") {}

    void setRollNo(string rollNo) { RollNo = rollNo; }
    void setName(string name) { Name = name; }
    void setSubject(string subject) { Subject = subject; }
    void setAddress(string address) { Address = address; }

    string getRollNo() { return RollNo; }
    string getName() { return Name; }
    string getSubject() { return Subject; }
    string getAddress() { return Address; }
};

void add(University &student) {
    string rollNo, name, subject, address;

    cout << "\tEnter RollNo Of Student: ";
    cin >> rollNo;
    student.setRollNo(rollNo);
    cin.ignore();

    cout << "\tEnter Name Of Student: ";
    getline(cin, name);
    student.setName(name);

    cout << "\tEnter Subject Of Student: ";
    getline(cin, subject);
    student.setSubject(subject);

    cout << "\tEnter Address Of Student: ";
    getline(cin, address);
    student.setAddress(address);

    ofstream out("D:/university.txt", ios::app);
    if (!out) {
        cout << "\tError: File Can't Open!" << endl;
        return;
    }

    out << student.getRollNo() << " : " << student.getName() << " : "
        << student.getSubject() << " : " << student.getAddress() << endl;
    out.close();

    cout << "\tStudent Added Successfully!" << endl;
}

void search() {
    string rollNo;
    cout << "\tEnter RollNo Of Student: ";
    cin >> rollNo;

    ifstream in("D:/university.txt");
    if (!in) {
        cout << "\tError: File Can't Open!" << endl;
        return;
    }

    string line;
    bool found = false;
    while (getline(in, line)) {
        if (line.find(rollNo) != string::npos) {
            cout << "\t" << line << endl;
            found = true;
        }
    }
    in.close();

    if (!found) {
        cout << "\tStudent Not Found!" << endl;
    }
}

void update(University &student) {
    string rollNo;
    cout << "\tEnter RollNo Of Student: ";
    cin >> rollNo;

    ifstream infile("D:/university.txt");
    ofstream outfile("D:/university_temp.txt");

    if (!infile || !outfile) {
        cout << "\tError: File Can't Open!" << endl;
        return;
    }

    string line;
    bool found = false;

    while (getline(infile, line)) {
        if (line.find(rollNo) != string::npos) {
            cin.ignore();
            string newAddress;
            cout << "\tEnter New Address: ";
            getline(cin, newAddress);
            student.setAddress(newAddress);

            // Replace last part of line after last colon
            int lastColon = line.find_last_of(':');
            if (lastColon != string::npos) {
                line = line.substr(0, lastColon + 2) + student.getAddress();
            }
            found = true;
        }
        outfile << line << endl;
    }

    infile.close();
    outfile.close();

    remove("D:/university.txt");
    rename("D:/university_temp.txt", "D:/university.txt");

    if (found)
        cout << "\tData Updated!" << endl;
    else
        cout << "\tStudent Not Found!" << endl;
}

int main() {
    University student;
    bool exitFlag = false;

    while (!exitFlag) {
        system("cls");
        int val;
        cout << "\tWelcome To University Management System" << endl;
        cout << "\t***************************************" << endl;
        cout << "\t1. Add Student" << endl;
        cout << "\t2. Search Student" << endl;
        cout << "\t3. Update Student Address" << endl;
        cout << "\t4. Exit" << endl;
        cout << "\tEnter Your Choice: ";
        cin >> val;

        switch (val) {
            case 1:
                system("cls");
                add(student);
                Sleep(2000);
                break;

            case 2:
                system("cls");
                search();
                Sleep(2000);
                break;

            case 3:
                system("cls");
                update(student);
                Sleep(2000);
                break;

            case 4:
                system("cls");
                exitFlag = true;
                cout << "\tGoodbye!" << endl;
                Sleep(2000);
                break;

            default:
                cout << "\tInvalid Choice!" << endl;
                Sleep(2000);
                break;
        }
    }

    return 0;
}
